//featurecolletion of boundary of punjab
var punjab_boundary = ee.FeatureCollection("projects/ee-dhanasekaraniirs/assets/punjab_boundary_2")

//sentinel 1 Images are obtained for the different time-periods.

var sentinel1_Apr16_30 = ee.ImageCollection('COPERNICUS/S1_GRD')
                    .filterDate('2022-04-16', '2022-04-30')
                    .filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VH'))
                    .filter(ee.Filter.eq('instrumentMode', 'IW'))
                    .filterMetadata('orbitProperties_pass','equals', 'ASCENDING')
                    .filterBounds(punjab_boundary);  

var sentinel1_May01_15 = ee.ImageCollection('COPERNICUS/S1_GRD')
                    .filterDate('2022-05-01', '2022-05-15')
                    .filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VH'))
                    .filter(ee.Filter.eq('instrumentMode', 'IW'))
                    .filterMetadata('orbitProperties_pass','equals', 'ASCENDING')
                    .filterBounds(punjab_boundary);                    

var sentinel1_May16_31 = ee.ImageCollection('COPERNICUS/S1_GRD')
                    .filterDate('2022-05-16', '2022-05-31')
                    .filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VH'))
                    .filter(ee.Filter.eq('instrumentMode', 'IW'))
                    .filterMetadata('orbitProperties_pass','equals', 'ASCENDING')
                    .filterBounds(punjab_boundary);

var sentinel1_june01_15 = ee.ImageCollection('COPERNICUS/S1_GRD')
                    .filterDate('2022-06-01', '2022-06-15')
                    .filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VH'))
                    .filter(ee.Filter.eq('instrumentMode', 'IW'))
                    .filterMetadata('orbitProperties_pass','equals', 'ASCENDING')
                    .filterBounds(punjab_boundary);
var sentinel1_june16_30 = ee.ImageCollection('COPERNICUS/S1_GRD')
                    .filterDate('2022-06-16', '2022-06-30')
                    .filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VH'))
                    .filter(ee.Filter.eq('instrumentMode', 'IW'))
                     .filterMetadata('orbitProperties_pass','equals', 'ASCENDING')
                     .filterBounds(punjab_boundary);
var sentinel1_july01_15 = ee.ImageCollection('COPERNICUS/S1_GRD')
                    .filterDate('2022-07-01', '2022-07-15')
                    .filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VH'))
                    .filter(ee.Filter.eq('instrumentMode', 'IW'))
                    .filterMetadata('orbitProperties_pass','equals', 'ASCENDING')
                     .filterBounds(punjab_boundary);
var sentinel1_july16_31 = ee.ImageCollection('COPERNICUS/S1_GRD')
                    .filterDate('2022-07-16', '2022-07-31')
                    .filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VH'))
                    .filter(ee.Filter.eq('instrumentMode', 'IW'))
                    .filterMetadata('orbitProperties_pass','equals', 'ASCENDING')
                     .filterBounds(punjab_boundary);
                    
var sentinel1_aug01_15 = ee.ImageCollection('COPERNICUS/S1_GRD')
                    .filterDate('2022-08-01', '2022-08-15')
                    .filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VH'))
                    .filter(ee.Filter.eq('instrumentMode', 'IW'))
                    .filterMetadata('orbitProperties_pass','equals', 'ASCENDING')
                     .filterBounds(punjab_boundary);
var sentinel1_aug16_31 = ee.ImageCollection('COPERNICUS/S1_GRD')
                    .filterDate('2022-08-16', '2022-08-31')
                    .filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VH'))
                    .filter(ee.Filter.eq('instrumentMode', 'IW'))
                    .filterMetadata('orbitProperties_pass','equals', 'ASCENDING')
                     .filterBounds(punjab_boundary);   
var sentinel1_sep01_15 = ee.ImageCollection('COPERNICUS/S1_GRD')
                    .filterDate('2022-09-01', '2022-09-15')
                    .filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VH'))
                    .filter(ee.Filter.eq('instrumentMode', 'IW'))
                    .filterMetadata('orbitProperties_pass','equals', 'ASCENDING')
                     .filterBounds(punjab_boundary); 
var sentinel1_sep16_30 = ee.ImageCollection('COPERNICUS/S1_GRD')
                    .filterDate('2022-09-16', '2022-09-30')
                    .filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VH'))
                    .filter(ee.Filter.eq('instrumentMode', 'IW'))
                    .filterMetadata('orbitProperties_pass','equals', 'ASCENDING')
                    .filterBounds(punjab_boundary);  
var sentinel1_oct01_15 = ee.ImageCollection('COPERNICUS/S1_GRD')
                    .filterDate('2022-10-01', '2022-10-15')
                    .filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VH'))
                    .filter(ee.Filter.eq('instrumentMode', 'IW'))
                    .filterMetadata('orbitProperties_pass','equals', 'ASCENDING')
                    .filterBounds(punjab_boundary);
var sentinel1_oct16_31 = ee.ImageCollection('COPERNICUS/S1_GRD')
                    .filterDate('2022-10-16', '2022-10-31')
                    .filter(ee.Filter.listContains('transmitterReceiverPolarisation', 'VH'))
                    .filter(ee.Filter.eq('instrumentMode', 'IW'))
                    .filterMetadata('orbitProperties_pass','equals', 'ASCENDING')
                    .filterBounds(punjab_boundary);

print('sentinel1_oct16_31',sentinel1_oct16_31);

//Image collection is reduced and renamed

var image_Apr16_30 = sentinel1_Apr16_30.select('VH').mean().rename('01_Apr16_30');
var image_May01_15 = sentinel1_May01_15.select('VH').mean().rename('02_May01_15');
var image_May16_31 = sentinel1_May16_31.select('VH').mean().rename('03_May16_31');                 
var image_june01_15 = sentinel1_june01_15.select('VH').mean().rename('04_june01_15');
var image_june16_30 = sentinel1_june16_30.select('VH').mean().rename('05_june16_30');
var image_july01_15 = sentinel1_july01_15.select('VH').mean().rename('06_july01_15');
var image_july16_31 = sentinel1_july16_31.select('VH').mean().rename('07_july16_31');
var image_aug01_15 = sentinel1_aug01_15.select('VH').mean().rename('08_aug01_15');
var image_aug16_31 = sentinel1_aug16_31.select('VH').mean().rename('09_aug16_31');
var image_sep01_15 = sentinel1_sep01_15.select('VH').mean().rename('10_sep01_15');
var image_sep16_30 = sentinel1_sep16_30.select('VH').mean().rename('11_sep16_30');
var image_oct01_15 = sentinel1_oct01_15.select('VH').mean().rename('12_oct01_15');
var image_oct16_31 = sentinel1_oct16_31.select('VH').mean().rename('13_oct16_31');

//All the images are stacked as bands in a single image.

var stacked_speckle = image_Apr16_30.addBands([image_May01_15,image_May16_31,image_june01_15,image_june16_30,image_july01_15,
image_july16_31,image_aug01_15,image_aug16_31,image_sep01_15,image_sep16_30,image_oct01_15,image_oct16_31]).clip(punjab_boundary);
print('stacked imagery',stacked_speckle);

//Applying speckle filter
var boxcar = ee.Kernel.square({radius: 1.5, units: 'pixels', normalize: true});
var stacked_speckle_filtered = stacked_speckle.convolve(boxcar);

//Converting the feature collection - Rice layer as geometry
var rice_geometry = Rice.geometry();
print('rice points',rice_geometry);

Map.centerObject(Rice);

Map.addLayer(stacked_speckle_filtered,{},'Stacked_SAR',false);
Map.addLayer(Rice,{color:'Green'},'Rice_points',false);

// Finding the mean of the backscatter values of all the points bandwise
//ie) backscatter values is extracted for all the points and mean is calculated bandwise
var ricepoints_backscatter_mean = stacked_speckle_filtered.reduceRegion({
  reducer:ee.Reducer.mean(),
  geometry: rice_geometry,
  scale:10
});

print('backscatter bandwise',ricepoints_backscatter_mean);

//Obtaining the keys of the dictionary
var rice_points_mean_keys = ricepoints_backscatter_mean.keys();
print('rice_points_mean_keys',rice_points_mean_keys);

//converting the dictionary to array
var mean_array = ricepoints_backscatter_mean.toArray(rice_points_mean_keys);
print('mean_array',mean_array);

//printing a chart for the mean values
print('Mean values of backscatter values over the rice points on Different images',ui.Chart.array.values(mean_array,0,rice_points_mean_keys));

//Backscatter analysis for buildings
var buildingpoints_backscatter_mean = stacked_speckle_filtered.reduceRegion({
  reducer:ee.Reducer.mean(),
  geometry: Buildings,
  scale:10
});

print('buildings backscatter datewise',buildingpoints_backscatter_mean);

//Backscatter analysis for water
var waterpoints_backscatter_mean = stacked_speckle_filtered.reduceRegion({
  reducer:ee.Reducer.mean(),
  geometry: Water,
  scale:10
});

print('water backscatter datewise',waterpoints_backscatter_mean);

//Backscatter analysis for Trees
var treepoints_backscatter_mean = stacked_speckle_filtered.reduceRegion({
  reducer:ee.Reducer.mean(),
  geometry: Trees,
  scale:10
});

print('tree backscatter datewise',treepoints_backscatter_mean);
